---
name: Create Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag? Format: x.y.z"
        required: true

jobs:
  create-release:
    name: "Create Release"
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # main is protected, to push to it, we need a PAT from an admin
          token: ${{ secrets.MAIN_BRANCH_ADMIN_PAT }}

      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          mkdir ./tmp-chglog
          wget https://github.com/git-chglog/git-chglog/releases/download/v0.11.2/git-chglog_0.11.2_linux_amd64.tar.gz -O ./tmp-chglog/git-chglog.tar.gz
          tar xf ./tmp-chglog/git-chglog.tar.gz --directory ./tmp-chglog
          python -m pip install --upgrade pip
          pip install --upgrade ansible

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"

      - name: Set Galaxy version tag
        run: |
          sed -i '/version: */c\version: ${{ github.event.inputs.version }}' galaxy.yml

      - name: Generate full changelog and remove git-chglog files
        run: |
          ./tmp-chglog/git-chglog --next-tag v${{ github.event.inputs.version }} --output ./CHANGELOG.md
          rm -rf tmp-chglog

      - name: Create and push Release commit
        run: |
          git add CHANGELOG.md
          git add galaxy.yml
          git commit -m "Release ${{ github.event.inputs.version }}"
          git push

      - name: Get release commit hash
        run: echo "release_hash=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build Ansible Collection
        run: ansible-galaxy collection build --force

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          commitish: ${{ env.release_hash }}
          release_name: ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: maxhoesel-smallstep-${{ github.event.inputs.version }}.tar.gz
          asset_name: maxhoesel-smallstep-${{ github.event.inputs.version }}.tar.gz
          asset_content_type: application/tar+gzip

      - name: Deploy Ansible collection to Galaxy
        run: ansible-galaxy collection publish maxhoesel-smallstep-${{ github.event.inputs.version }}.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
