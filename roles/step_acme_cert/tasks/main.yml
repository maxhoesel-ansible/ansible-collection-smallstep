---
# tasks file for step_acme_cert
- ansible.builtin.include_tasks: check.yml

- name: "Compatibility: Respect step_cli_steppath if step_acme_cert_user is root"
  ansible.builtin.set_fact:
    _resolved_steppath: "{{ (step_cli_steppath is defined and step_acme_cert_user == 'root') | ternary(step_cli_steppath, step_acme_cert_steppath) }}"

- name: Update cert/keyfile dicts with defaults
  ansible.builtin.set_fact:
    # Role params take precedence over set_fact, so we need to declare a new private variable
    step_acme_cert_keyfile_full: "{{ step_acme_cert_keyfile_defaults | combine(step_acme_cert_keyfile) }}"
    step_acme_cert_certfile_full: "{{ step_acme_cert_certfile_defaults | combine(step_acme_cert_certfile) }}"

- name: Get certificate from CA
  maxhoesel.smallstep.step_ca_certificate:
    provisioner: "{{ step_acme_cert_ca_provisioner }}"
    contact: "{{ step_acme_cert_contact }}"
    crt_file: "{{ step_acme_cert_certfile_full.path }}"
    key_file: "{{ step_acme_cert_keyfile_full.path }}"
    state: present
    name: "{{ step_acme_cert_name }}"
    not_after: "{{ step_acme_cert_duration | default(omit) }}"
    san: "{{ step_acme_cert_san }}"
    standalone: "{{ step_acme_cert_webroot_path | bool }}"
    step_cli_executable: "{{ step_cli_executable }}"
    webroot: "{{ step_acme_cert_webroot_path }}"
  become: yes
  become_user: "{{ step_acme_cert_user }}"
  environment:
    STEPPATH: "{{ _resolved_steppath }}"

- name: Cert and key permissions are set
  file:
    path: "{{ item.path }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  loop:
    - "{{ step_acme_cert_keyfile_full }}"
    - "{{ step_acme_cert_certfile_full }}"

- ansible.builtin.include_tasks: renewal.yml
