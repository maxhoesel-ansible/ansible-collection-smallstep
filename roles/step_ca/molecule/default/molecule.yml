---
dependency:
  name: galaxy
driver:
  name: podman
platforms:
  # We use the images provided by geerlingguy where possible, as they provide out-of-the-box
  # support for Ansible (pre_build_image=true, speeds up testing).
  - name: step-ca-ubuntu-22
    groups:
      - ubuntu
      - ca
    image: "docker.io/geerlingguy/docker-ubuntu2204-ansible"
    systemd: always
    override_command: false
    pre_build_image: true

  - name: step-ca-ubuntu-20
    groups:
      - ubuntu
      - ca
    image: "docker.io/geerlingguy/docker-ubuntu2004-ansible"
    systemd: always
    override_command: false
    pre_build_image: true

  - name: step-ca-ubuntu-18
    groups:
      - ubuntu
      - ca
    image: "docker.io/geerlingguy/docker-ubuntu1804-ansible"
    systemd: always
    override_command: false
    pre_build_image: true

  - name: step-ca-debian-11
    groups:
      - debian
      - ca
    image: "docker.io/geerlingguy/docker-debian11-ansible"
    systemd: always
    override_command: false
    pre_build_image: true

  - name: step-ca-debian-10
    groups:
      - debian
      - ca
    image: "docker.io/geerlingguy/docker-debian10-ansible"
    systemd: always
    override_command: false
    pre_build_image: true

  - name: step-ca-rockylinux-9
    groups:
      - rockylinux
      - ca
    image: "docker.io/geerlingguy/docker-rockylinux9-ansible"
    systemd: always
    override_command: false
    pre_build_image: true

  - name: step-ca-rockylinux-8
    groups:
      - rockylinux
      - ca
    image: "docker.io/geerlingguy/docker-rockylinux8-ansible"
    systemd: always
    override_command: false
    pre_build_image: true

  - name: step-ca-fedora-36
    groups:
      - fedora
      - ca
    image: "docker.io/geerlingguy/docker-fedora36-ansible"
    systemd: always
    override_command: false
    pre_build_image: true


provisioner:
  name: ansible
  env:
    # This is required for podman to function: https://github.com/ansible-community/molecule-podman/issues/2
    ANSIBLE_PIPELINING: false
    #ANSIBLE_VERBOSITY: 3 # enable for debugging
  inventory:
    group_vars:
      all:
        # These will be set to a concrete version if running from tox,
        # fallback on the latest version if running molecule directly
        step_cli_version: ${STEP_CLI_VERSION:-latest}
        step_ca_version: ${STEP_CA_VERSION:-latest}
      ca:
        step_ca_name: Molecule Test CA
        step_ca_user: step-ca-molecule
        step_ca_root_password: molecule
        step_ca_intermediate_password: molecule-intermediate
        step_ca_path: /etc/step-ca-molecule
        step_ca_ssh: yes

        step_ca_existing_root: local
        step_ca_existing_root_file: files/molecule-ca.crt
        step_ca_existing_key: local
        step_ca_existing_key_file: files/molecule-ca.key
        step_ca_existing_key_password: molecule

scenario:
  test_sequence:
    - lint
    - destroy
    - dependency
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - check # also run check mode in regular tests
    - side_effect
    - verify
    - destroy

verifier:
  name: ansible
