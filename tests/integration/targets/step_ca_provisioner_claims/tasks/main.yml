- block:
  # We set up 3 provisioners with custom claims to fully test the module:
  # claims-single (ACME): To test most parameters and single-provisioner updates
  # claims-double (ACME + AWS): To test updating multiple provisioners with the same name
  - name: Set claim facts
    set_fact:
      claims_provisioner:
        name: claims-test
        type: ACME
        min_tls_cert_duration: 1h
        default_tls_cert_duration: 20h
      claims_global:
        global_claims: yes
        min_tls_cert_duration: 1h
        default_tls_cert_duration: 20h

  - name: Testing provisioners are present
    maxhoesel.smallstep.step_ca_provisioner:
      name: "{{ claims_provisioner.name }}"
      type: "{{ claims_provisioner.type }}"
      step_cli_executable: "{{ cli_binary }}"

  - name: Provisioner claims are present
    maxhoesel.smallstep.step_ca_provisioner_claims: "{{ claims_provisioner }}"

  - name: Global claims are present
    maxhoesel.smallstep.step_ca_provisioner_claims: "{{ claims_global }}"


  # Update the provisioner to test both adding and overwriting claims:
  # - max_tls_cert_duration is newly added
  # - default_tls_cert_duration is changed from 20h -> 24h
  - name: Test updating provisioner claims
    maxhoesel.smallstep.step_ca_provisioner_claims:
      name: "{{ claims_provisioner.name }}"
      max_tls_cert_duration: 33h
      default_tls_cert_duration: 24h
    register: step_ca_current_claims

  - name: Test updating global claims
    maxhoesel.smallstep.step_ca_provisioner_claims:
      global_claims: yes
      max_tls_cert_duration: 33h
      default_tls_cert_duration: 24h
    register: step_ca_current_global_claims

  # Combine our initial claims with the updataed ones to verify that everything went well
  - name: Set expected claims
    set_fact:
      expected_provisioner:
        allowRenewalAfterExpiry: false
        disableRenewal: false
        enableSSHCA: true
        minTLSCertDuration: 1h
        defaultTLSCertDuration: 24h
        maxTLSCertDuration: 33h
      expected_global:
        minTLSCertDuration: 1h
        maxTLSCertDuration: 33h
        defaultTLSCertDuration: 24h
  - name: Validate claims status
    assert:
      quiet: yes
      that:
        - step_ca_current_global_claims.claims == expected_global
        - step_ca_current_claims.claims[claims_provisioner.type] == expected_provisioner

  - name: Test overwriting claims
    maxhoesel.smallstep.step_ca_provisioner_claims:
      name: "{{ claims_provisioner.name }}"
      type: "{{ claims_provisioner.type }}"
      exclusive: yes
      min_tls_cert_duration: 10m
    register: step_ca_current_claims

  - name: Set expected claim
    set_fact:
      expected_provisioner:
        minTLSCertDuration: 10m
  - name: Validate overwritten claims
    assert:
      quiet: yes
      that: step_ca_current_claims.claims == expected_provisioner

  - name: Get Server PID
    command: pgrep -f step-ca
    register: _pid
  - name: Restart Server
    command: "kill -1 {{ _pid.stdout }}"
    become: false

  - name: Check server health
    command: "{{ cli_binary }} ca health"
    changed_when: no

  - name: Testing provisioner is absent
    maxhoesel.smallstep.step_ca_provisioner:
      name: "{{ claims_provisioner.name }}"
      type: "{{ claims_provisioner.type }}"
      state: absent
      step_cli_executable: "{{ cli_binary }}"
  become: yes
  become_user: "{{ ca_user }}"
  environment:
      STEPPATH: "{{ ca_path }}"
  tags:
    - local-ca
