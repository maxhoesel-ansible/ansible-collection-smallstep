- name: Testing keys are present
  copy:
    src: "{{ item }}"
    dest: "/tmp/"
    owner: "{{ step_ca_user }}"
    group: "{{ step_ca_user }}"
    mode: 0600
  loop:
    - tests_key
    - tests_crt
- name: Testing password file is present
  copy:
    content: "{{ step_ca_password }}"
    dest: "/tmp/tests_passfile"
    owner: "{{ step_ca_user }}"
    group: "{{ step_ca_user }}"
    mode: 0644 # needs to be readable by the client requesting the cert
- name: Create test provisioners
  maxhoesel.smallstep.step_ca_provisioner: "{{ item }}"
  loop:
    - name: tests-JWK
      type: JWK
      create: yes
      jwk_password_file: "/tmp/tests_passfile"
  become: yes
  become_user: "{{ step_ca_user }}"

- name: Reload Server
  service:
    name: step-ca
    state: reloaded

- name: Test token creation
  maxhoesel.smallstep.step_ca_token:
    name: "127.0.0.1"
    provisioner: tests-JWK
    provisioner_password_file: "/tmp/tests_passfile"
    return_token: yes
  become: yes
  become_user: "{{ step_ca_user }}"
  register: generated_token
- name: Verify that token got returned
  assert:
    that: generated_token.token

- name: Delete generated files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/tests_passfile

- name: Remove test provisioners
  maxhoesel.smallstep.step_ca_provisioner:
    name: "{{ item.0 }}"
    type: "{{ item.1 }}"
    state: absent
  become: yes
  become_user: "{{ step_ca_user }}"
  loop:
    - ["tests-JWK", "JWK"]
