- block:
  - name: Testing keys are present
    copy:
      src: "{{ item }}"
      dest: "/tmp/"
      owner: "{{ ca_user }}"
      group: "{{ ca_user }}"
      mode: 0600
    loop:
      - tests_key
      - tests_crt

  - name: Testing password file is present
    copy:
      content: "password-testing"
      dest: "/tmp/tests_passfile"
      owner: "{{ ca_user }}"
      group: "{{ ca_user }}"
      mode: 0644 # needs to be readable by the client requesting the cert

  # The values for these test provisioners are mostly identical to the ones in the smallstep documentation,
  # so many of the online provisioners do not actually work. Good enough to test our module
  # functionality still.
  - name: Create test provisioners
    maxhoesel.smallstep.step_ca_provisioner: "{{ item | combine({'step_cli_executable': cli_binary}) }}"
    loop:
      - name: tests-JWK
        type: JWK
        password_file: "/tmp/tests_passfile"
        create: yes
      - name: tests-OIDC
        type: OIDC
        oidc_client_id: 1087160488420-8qt7bavg3qesdhs6it824mhnfgcfe8il.apps.googleusercontent.com
        oidc_configuration_endpoint: https://accounts.google.com/.well-known/openid-configuration
        oidc_admin_email:
          - mariano@smallstep.com
          - max@smallstep.com
      - name: tests-Amazon
        type: AWS
        aws_account: 123456789
        instance_age: 1h
      - name: tests-Google
        type: GCP
        gcp_service_account:
          - 1234567890-compute@developer.gserviceaccount.com
          - 9876543210-compute@developer.gserviceaccount.com
        gcp_project:
          - identity
          - accounting
      - name: tests-ACME
        type: ACME
      - name: tests-x5c
        type: X5C
        x5c_root_file: "/tmp/tests_crt"
      - name: tests-k8s
        type: K8SSA
        k8s_pem_keys_file: "/tmp/tests_crt"

  - name: Test creation idempotency
    maxhoesel.smallstep.step_ca_provisioner: "{{ item | combine({'step_cli_executable': cli_binary })}}"
    loop:
      - name: tests-JWK
        type: JWK
        create: yes
        password_file: "/tmp/tests_passfile"
      - name: tests-OIDC
        type: OIDC
        oidc_client_id: 1087160488420-8qt7bavg3qesdhs6it824mhnfgcfe8il.apps.googleusercontent.com
        oidc_configuration_endpoint: https://accounts.google.com/.well-known/openid-configuration
        oidc_admin_email:
          - mariano@smallstep.com
          - max@smallstep.com
      - name: tests-Amazon
        type: AWS
        aws_account: 123456789
        instance_age: 1h
      - name: tests-Google
        type: GCP
        gcp_service_account:
          - 1234567890-compute@developer.gserviceaccount.com
          - 9876543210-compute@developer.gserviceaccount.com
        gcp_project:
          - identity
          - accounting
      - name: tests-ACME
        type: ACME
      - name: tests-x5c
        type: X5C
        x5c_root_file: "/tmp/tests_crt"
      - name: tests-k8s
        type: K8SSA
        k8s_pem_keys_file: "/tmp/tests_crt"
    register: second_run

  - name: Verify that nothing changed on the second run
    assert:
      that: not second_run.changed

  - name: Test updating provisioners
    maxhoesel.smallstep.step_ca_provisioner:
      name: tests-OIDC
      type: OIDC
      oidc_client_id: 1087160488420-8qt7bavg3qesdhs6it824mhnfgcfe8il.apps.googleusercontent.com
      oidc_configuration_endpoint: https://accounts.google.com/.well-known/openid-configuration
      oidc_admin_email:
        - mariano@smallstep.com
        - max@smallstep.com
        - new@admin.com
      state: "updated"
      step_cli_executable: "{{ cli_binary }}"
    register: update_test

  - name: Verify that provisioner got updated
    ansible.builtin.assert:
      that:
        update_test.changed

  # Remove the online provisioners before restarting as they may imapct server
  # functionality
  - name: Remove online provisioners
    maxhoesel.smallstep.step_ca_provisioner:
      name: "{{ item.0 }}"
      type: "{{ item.1 }}"
      state: absent
      step_cli_executable: "{{ cli_binary }}"
    loop:
      - ["tests-OIDC", "OIDC"]
      - ["tests-Amazon", "AWS"]
      - ["tests-Google", "GCP"]

  - name: Get Server PID
    shell: pgrep -fa step-ca | grep -v step-ca.sh | cut -d ' ' -f 1
    register: _pid
  - name: Reload Server
    command: "kill -1 {{ _pid.stdout_lines[0] }}"
    become: false

  - name: Check server health
    command: "{{ cli_binary }} ca health"
    changed_when: no

  - name: Remove test provisioners
    maxhoesel.smallstep.step_ca_provisioner:
      name: "{{ item }}"
      state: absent
      step_cli_executable: "{{ cli_binary }}"
    loop:
      - "tests-JWK"
      - "tests-ACME"
      - "tests-x5c"
      - "tests-k8s"

  - name: Get step-ca config
    command: "cat {{ ca_path }}/config/ca.json"
    register: step_ca_config
  - name: Verify that all provisioners are absent
    assert:
      that:
        - (step_ca_config.stdout | from_json).authority.provisioners is not defined
  become: yes
  become_user: "{{ ca_user }}"
  environment:
    STEPPATH: "{{ ca_path }}"
  tags:
    - local-ca
