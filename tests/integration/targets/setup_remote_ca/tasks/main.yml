- name: Install JQ
  ansible.builtin.apt:
    name: jq # needed to get root certificate
  retries: 3
  delay: 5
  register: _task
  until: _task is not failed
- name: Install step-cli
  ansible.builtin.apt:
    deb: "https://github.com/smallstep/cli/releases/download/v{{ cli_version }}/step-cli_{{ cli_version }}_amd64.deb"
  retries: 3
  delay: 5
  register: _task
  until: _task is not failed

# the stuff of itsec nightmares
# the step-ca container genreates its root CA dynamically when started, but we retrieve its CA fingerprint to bootstrap from it.
# since there is no way to pre-seed the fingerprint and root CA cert, we instead use the internal step-ca API to retrieve all root certificates,
# then generate the fingerprint from that.
# This hack may stop working if smallstep decides to change their ca API structure in the future. but it works for now
- name: Get remote fingerprint
  ansible.builtin.shell: "curl -k {{ ca_url }}/roots | jq -rj '.crts[0]' > /tmp/root_cert && step-cli certificate fingerprint /tmp/root_cert"
  register: _ca_fp
- name: Set fingerprint
  set_fact:
    ca_fp: "{{ _ca_fp.stdout }}"

- name: Bootstrap host
  maxhoesel.smallstep.step_ca_bootstrap:
    ca_url: "{{ ca_url }}"
    fingerprint: "{{ ca_fp }}"
    install: no # Can't test system-wide install as it could affect the other test targets

- name: Provsioner password file is present
  copy:
    content: "{{ ca_provisioner_password }}"
    dest: "{{ ca_provisioner_password_file }}"
    mode: 0644 # needs to be readable by the client requesting the cert
